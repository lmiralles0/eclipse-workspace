/*
 * get_Entrada.c
 *
 *  Created on: 5 oct. 2020
 *      Author: Luciano Miralles
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define LEN 5000

static int get_Int(int* pResultado);
static int esNumericaInt(char* cadena);
static int myGetsInt(char* cadena, int longitud);

int get_EntradaInt(int* pResultado, char* mensaje, char* mensajeError, int maximo, int minimo, int intentos){

	int retorno = -1;
	int bufferInt;
	if(pResultado != NULL && mensaje != NULL && mensajeError != NULL && minimo < maximo && intentos >= 0){

		do{
			printf("%s", mensaje);

			if(get_Int(&bufferInt) == 0 && bufferInt >= minimo && bufferInt <= maximo)
			{
				*pResultado = bufferInt;
				retorno = 0;
				break;
			}
			else
			{
				printf("\n%s", mensajeError);
				intentos --;
			}
		} while(intentos >= 0);


	}
	return retorno;
}
/*get_Int le da un arrays de caracteres al usuario para que el usuario ingrese,
 * aca se va leer como texto (pero aca le pedimos numeros). Entonces entra la funciona esNumerica
 * para ver si es numero o no y la myGetsInt para que no me desborde la funcion antigua scanf
 */
static int get_Int(int* pResultado)
{
	int retorno = -1;
	char bufferInt[LEN];

	if(esNumericaInt(bufferInt) && myGetsInt(bufferInt,sizeof(bufferInt)) == 0)
	{
		retorno = 0;
		*pResultado = atoi(bufferInt);
	}
	return retorno;
}

static int esNumericaInt(char* cadena) //Esta funcion tira verdadero o falso (1 v o 0 en f)
{
	int retorno = 1;

	for(int i = 0; cadena[i] != '\0'; i++)
	{
		if(cadena[i] > '9' || cadena [i] < '0')
		{
			retorno = 0;
			break;
		}
	}

	return retorno;
}

static int myGetsInt(char* cadena, int longitud)
{
	fflush(stdin);
	fgets(cadena, longitud, stdin);

	cadena[strlen(cadena)-1] = '\0';
	return 0;
}
